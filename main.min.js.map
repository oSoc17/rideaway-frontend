{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/geolocation.js","src/scripts.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","createMarker","el","document","createElement","className","child1","child2","appendChild","mapboxgl","Marker","startTracking","map","marker","navigator","geolocation","watchPosition","position","onPosition","alert","window","DeviceOrientationEvent","addEventListener","_setHeading","setLngLat","coords","longitude","latitude","addTo","addAllRoutes","addSource","type","data","addLayer","id","source","layout","visibility","paint","line-color","property","line-width","line-opacity","symbol-placement","text-font","text-field","text-size","text-color","toggleLayer","getLayoutProperty","setLayoutProperty","addMarkers","origin","destination","features","geometry","coordinates","properties","title","iconSize","forEach","src","style","width","height","offset","calculateRoute","profile","url","clearRoutes","removeLayer","createGeocoder","placeholder","MapboxGeocoder","accessToken","flyTo","country","_geolocation","Map","container","center","zoom","on","setPoint","result","geocoder","geocoder2","addControl","_ref","_ref2"],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","function createMarker() {\n  const geojson = {\n    type: 'FeatureCollection',\n    features: [\n      {\n        id: 'currentPosition',\n        type: 'Feature',\n        geometry: { type: 'Point', coordinates: [0, 0] },\n        properties: { iconSize: [50, 50] }\n      }\n    ]\n  };\n\n  // create our pulsating dot\n  let el = document.createElement('div');\n  el.className = 'marker';\n  let child1 = document.createElement('div');\n  child1.className = 'dot';\n  let child2 = document.createElement('div');\n  child2.className = 'pulse';\n  el.appendChild(child1);\n  el.appendChild(child2);\n\n  return new mapboxgl.Marker(el);\n}\n\nexport function startTracking(map) {\n  const marker = createMarker();\n  if (navigator.geolocation) {\n    navigator.geolocation.watchPosition(position =>\n      onPosition(position, marker, map)\n    );\n  } else {\n    alert(\"Sorry, your browser doesn't support geolocation!\");\n  }\n\n  if (window.DeviceOrientationEvent) {\n    window.addEventListener('deviceorientation', _setHeading);\n  }\n}\n\nfunction stopTracking() {\n  navigator.geolocation.clearWatch(this.state.watchPositionId);\n  window.removeEventListener('deviceorientation', _setHeading);\n}\n\nfunction onPosition(position, marker, map) {\n  marker.setLngLat([position.coords.longitude, position.coords.latitude]);\n  marker.addTo(map);\n}\n\nfunction _setHeading(e) {}\n","import { startTracking } from './geolocation';\n\nmapboxgl.accessToken = '';\nconst map = new mapboxgl.Map({\n  container: 'map', // container id\n  style: 'https://openmaptiles.github.io/positron-gl-style/style-cdn.json', //stylesheet location\n  center: [4.355975, 50.860633], // starting position\n  zoom: 11 // starting zoom\n});\n\nfunction addAllRoutes() {\n  map.addSource('GFR', {\n    type: 'geojson',\n    data: 'http://188.226.154.37/routes/GFR.json'\n  });\n  map.addLayer({\n    id: 'GFR_routes',\n    type: 'line',\n    source: 'GFR',\n    layout: {\n      visibility: 'visible'\n    },\n    paint: {\n      'line-color': {\n        type: 'identity',\n        property: 'colour'\n      },\n      'line-width': 5,\n      'line-opacity': 0.3\n    }\n  });\n  map.addLayer({\n    id: 'GFR_symbols',\n    type: 'symbol',\n    source: 'GFR',\n    layout: {\n      visibility: 'visible',\n      'symbol-placement': 'line',\n      'text-font': ['Open Sans Regular'],\n      'text-field': '{icr}',\n      'text-size': 16\n    },\n    paint: {\n      'text-color': {\n        type: 'identity',\n        property: 'colour'\n      }\n    }\n  });\n}\n\nfunction toggleLayer(id) {\n  let visibility = map.getLayoutProperty(id, 'visibility');\n  if (visibility === 'visible') {\n    visibility = 'none';\n  } else {\n    visibility = 'visible';\n  }\n  map.setLayoutProperty(id, 'visibility', visibility);\n}\n\nfunction addMarkers(origin, destination) {\n  const geojson = {\n    type: 'FeatureCollection',\n    features: [\n      {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: origin\n        },\n        properties: {\n          title: 'START',\n          iconSize: [50, 50]\n        }\n      },\n      {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: destination\n        },\n        properties: {\n          title: 'END',\n          iconSize: [50, 50]\n        }\n      }\n    ]\n  };\n  geojson.features.forEach(marker => {\n    let el = document.createElement('img');\n    el.className = 'marker';\n    el.src = './icons/locator-yellow.svg';\n    el.style.width = marker.properties.iconSize[0] + 'px';\n    el.style.height = marker.properties.iconSize[1] + 'px';\n    new mapboxgl.Marker(el, {\n      offset: [\n        -marker.properties.iconSize[0] / 2,\n        -marker.properties.iconSize[1] / 2\n      ]\n    })\n      .setLngLat(marker.geometry.coordinates)\n      .addTo(map);\n  });\n}\n\nfunction calculateRoute(origin, destination, profile) {\n  // swap around values for the API\n  origin = [origin[1], origin[0]];\n  destination = [destination[1], destination[0]];\n  const url = `http://188.226.154.37/route?loc1=${origin}&loc2=${destination}&profile=${profile}`;\n  map.addLayer({\n    id: profile,\n    type: 'line',\n    source: {\n      type: 'geojson',\n      data: url\n    },\n    paint: {\n      'line-color': profile === 'networks' ? 'red' : 'grey',\n      'line-width': 4\n    }\n  });\n}\n\nfunction clearRoutes() {\n  map.removeLayer('networks');\n  map.removeLayer('shortest');\n  map.removeLayer('points');\n}\n\nfunction createGeocoder(placeholder) {\n  return new MapboxGeocoder({\n    accessToken:\n      'pk.eyJ1IjoiYXJuYXVkd2V5dHMiLCJhIjoiY2o0cGt3d3oxMXl0cDMzcXNlbThnM3RtaCJ9.BMUyxqHH-FC69pW4U4YO9A',\n    flyTo: false,\n    placeholder,\n    country: 'BE'\n  });\n}\n\nfunction filterRoute(route) {\n  map.setFilter('GFR_routes', ['==', 'icr', route]);\n  map.setFilter('GFR_symbols', ['==', 'icr', route]);\n}\n\nmap.on('load', function() {\n  let origin = null;\n  let destination = null;\n\n  startTracking(map);\n\n  addAllRoutes();\n\n  // create geocoders and add to map\n  const geocoder = createGeocoder('origin');\n  const geocoder2 = createGeocoder('destination');\n  map.addControl(geocoder);\n  map.addControl(geocoder2);\n\n  // fire functions on result\n  geocoder.on('result', ({ result }) => {\n    // result event fires twice for some reason, this prevents it\n    // from executing our code twice, resulting in errors\n    if (!origin || destination !== setPoint(result)) {\n      origin = setPoint(result);\n    }\n  });\n  geocoder2.on('result', ({ result }) => {\n    if (!destination || destination !== setPoint(result)) {\n      destination && clearRoutes();\n      destination = setPoint(result);\n      calculateRoute(origin, destination, 'shortest');\n      calculateRoute(origin, destination, 'networks');\n      addMarkers(origin, destination);\n      toggleLayer('GFR_routes');\n      toggleLayer('GFR_symbols');\n    }\n  });\n\n  function setPoint(result) {\n    return result.geometry.coordinates;\n  }\n});\n"]}
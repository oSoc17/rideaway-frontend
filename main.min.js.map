{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/events.js","src/js/geolocation.js","src/js/scripts.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","getElementByClassName","className","document","getElementsByClassName","registerEvents","map","addEventListener","console","log","getSource","createMarker","el","createElement","child1","child2","appendChild","mapboxgl","Marker","startTracking","marker","navigator","geolocation","watchPosition","position","onPosition","alert","window","DeviceOrientationEvent","_setHeading","setLngLat","coords","longitude","latitude","addTo","addAllRoutes","addSource","type","data","addLayer","id","source","layout","visibility","paint","line-color","property","line-width","line-opacity","symbol-placement","text-font","text-field","text-size","text-color","toggleLayer","getLayoutProperty","setLayoutProperty","addMarker","LatLng","geojson","features","geometry","coordinates","properties","iconSize","src","style","width","height","offset","calculateRoute","origin","destination","profile","url","clearRoutes","removeLayer","createGeocoder","placeholder","MapboxGeocoder","accessToken","flyTo","country","filterRoute","route","setFilter","_geolocation","_events","Map","container","center","zoom","on","setPoint","result","markerO","markerD","geocoder","geocoder2","addControl","_ref","remove","_ref2"],"mappings":"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","file":"main.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","function getElementByClassName(className) {\n  const elements = document.getElementsByClassName(className);\n  return elements[0];\n}\n\nexport function registerEvents(map) {\n  getElementByClassName('center-btn').addEventListener('click', () => {\n    console.log(map.getSource('currentPosition'));\n  });\n}\n","function createMarker() {\n  const geojson = {\n    type: 'FeatureCollection',\n    features: [\n      {\n        id: 'currentPosition',\n        type: 'Feature',\n        geometry: { type: 'Point', coordinates: [0, 0] },\n        properties: { iconSize: [50, 50] }\n      }\n    ]\n  };\n\n  // create our pulsating dot\n  let el = document.createElement('div');\n  el.className = 'marker';\n  let child1 = document.createElement('div');\n  child1.className = 'dot';\n  let child2 = document.createElement('div');\n  child2.className = 'pulse';\n  el.appendChild(child1);\n  el.appendChild(child2);\n\n  return new mapboxgl.Marker(el);\n}\n\nexport function startTracking(map) {\n  const marker = createMarker();\n  if (navigator.geolocation) {\n    navigator.geolocation.watchPosition(position =>\n      onPosition(position, marker, map)\n    );\n  } else {\n    alert(\"Sorry, your browser doesn't support geolocation!\");\n  }\n\n  if (window.DeviceOrientationEvent) {\n    window.addEventListener('deviceorientation', _setHeading);\n  }\n}\n\nfunction stopTracking() {\n  navigator.geolocation.clearWatch(this.state.watchPositionId);\n  window.removeEventListener('deviceorientation', _setHeading);\n}\n\nfunction onPosition(position, marker, map) {\n  marker.setLngLat([position.coords.longitude, position.coords.latitude]);\n  marker.addTo(map);\n}\n\nfunction _setHeading(e) {}\n","import { startTracking } from './geolocation';\nimport { registerEvents } from './events';\n\nmapboxgl.accessToken = '';\nconst map = new mapboxgl.Map({\n  container: 'map', // container id\n  style: 'https://openmaptiles.github.io/positron-gl-style/style-cdn.json', //stylesheet location\n  center: [4.355975, 50.860633], // starting position\n  zoom: 11 // starting zoom\n});\n\nfunction addAllRoutes() {\n  map.addSource('GFR', {\n    type: 'geojson',\n    data: 'http://188.226.154.37/routes/GFR.json'\n  });\n  map.addLayer({\n    id: 'GFR_routes',\n    type: 'line',\n    source: 'GFR',\n    layout: {\n      visibility: 'visible'\n    },\n    paint: {\n      'line-color': {\n        type: 'identity',\n        property: 'colour'\n      },\n      'line-width': 5,\n      'line-opacity': 0.3\n    }\n  });\n  map.addLayer({\n    id: 'GFR_symbols',\n    type: 'symbol',\n    source: 'GFR',\n    layout: {\n      visibility: 'visible',\n      'symbol-placement': 'line',\n      'text-font': ['Open Sans Regular'],\n      'text-field': '{icr}',\n      'text-size': 16\n    },\n    paint: {\n      'text-color': {\n        type: 'identity',\n        property: 'colour'\n      }\n    }\n  });\n}\n\nfunction toggleLayer(id) {\n  let visibility = map.getLayoutProperty(id, 'visibility');\n  if (visibility === 'visible') {\n    visibility = 'none';\n  } else {\n    visibility = 'visible';\n  }\n  map.setLayoutProperty(id, 'visibility', visibility);\n}\n\nfunction addMarker(LatLng) {\n  const geojson = {\n    type: 'FeatureCollection',\n    features: [\n      {\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: LatLng\n        },\n        properties: {\n          iconSize: [50, 50]\n        }\n      }\n    ]\n  };\n  const marker = geojson.features[0];\n  let el = document.createElement('img');\n  el.className = 'marker';\n  el.src = './icons/locator-yellow.svg';\n  el.style.width = marker.properties.iconSize[0] + 'px';\n  el.style.height = marker.properties.iconSize[1] + 'px';\n  return new mapboxgl.Marker(el, {\n    offset: [\n      -marker.properties.iconSize[0] / 2,\n      -marker.properties.iconSize[1] / 2\n    ]\n  }).setLngLat(marker.geometry.coordinates);\n}\n\nfunction calculateRoute(origin, destination, profile) {\n  // swap around values for the API\n  origin = [origin[1], origin[0]];\n  destination = [destination[1], destination[0]];\n  const url = `http://188.226.154.37/route?loc1=${origin}&loc2=${destination}&profile=${profile}`;\n  map.addLayer({\n    id: profile,\n    type: 'line',\n    source: {\n      type: 'geojson',\n      data: url\n    },\n    paint: {\n      'line-color': profile === 'networks' ? 'red' : 'grey',\n      'line-width': 4\n    }\n  });\n}\n\nfunction clearRoutes() {\n  map.removeLayer('networks');\n  map.getSource('networks');\n  map.removeLayer('shortest');\n}\n\nfunction createGeocoder(placeholder) {\n  return new MapboxGeocoder({\n    accessToken:\n      'pk.eyJ1IjoiYXJuYXVkd2V5dHMiLCJhIjoiY2o0cGt3d3oxMXl0cDMzcXNlbThnM3RtaCJ9.BMUyxqHH-FC69pW4U4YO9A',\n    flyTo: false,\n    placeholder,\n    country: 'BE'\n  });\n}\n\nfunction filterRoute(route) {\n  map.setFilter('GFR_routes', ['==', 'icr', route]);\n  map.setFilter('GFR_symbols', ['==', 'icr', route]);\n}\n\nmap.on('load', function() {\n  let origin = null;\n  let destination = null;\n  let markerO = null;\n  let markerD = null;\n\n  startTracking(map);\n\n  registerEvents(map);\n\n  addAllRoutes();\n\n  // create geocoders and add to map\n  const geocoder = createGeocoder('origin');\n  const geocoder2 = createGeocoder('destination');\n  map.addControl(geocoder);\n  map.addControl(geocoder2);\n\n  // fire functions on result\n  geocoder.on('result', ({ result }) => {\n    // result event fires twice for some reason, this prevents it\n    // from executing our code twice, resulting in errors\n    if (!origin || destination !== setPoint(result)) {\n      markerO && markerO.remove();\n      origin = setPoint(result);\n      markerO = addMarker(origin);\n      markerO.addTo(map);\n    }\n  });\n  geocoder2.on('result', ({ result }) => {\n    if (!destination || destination !== setPoint(result)) {\n      destination && clearRoutes();\n      markerD && markerD.remove();\n      destination = setPoint(result);\n      markerD = addMarker(destination);\n      markerD.addTo(map);\n      calculateRoute(origin, destination, 'shortest');\n      calculateRoute(origin, destination, 'networks');\n      toggleLayer('GFR_routes');\n      toggleLayer('GFR_symbols');\n    }\n  });\n\n  filterRoute('A');\n\n  function setPoint(result) {\n    return result.geometry.coordinates;\n  }\n});\n"]}